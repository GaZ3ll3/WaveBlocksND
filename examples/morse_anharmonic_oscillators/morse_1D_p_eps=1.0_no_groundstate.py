algorithm = "hagedorn"
propagator = "semiclassical"
splitting_method = "Y4"

T = 12
dt = 0.01

dimension = 1
ncomponents = 1

eps = 0.1

potential ="morse_zero"
l = 1.0
x0 = 0.0

# The parameter set of the initial wavepacket
# Parameter values computed by 'ComputeGroundstate.py'
Q = [[0.84089642+0.j]]
P = [[0.+1.18920712j]]
q = [[0.0]]
p = [[0.0]]
S = [[0.0]]

# What it takes to specify a wavepacket!
wp0 = {
    "type" : "HagedornWavepacket",
    "dimension" : 1,
    "ncomponents": 1,
    "eps" : eps,
    "Pi" : [q,p,Q,P,S],
    "basis_shapes" : [{
        "type" : "HyperbolicCutShape",
        "K" : 64,
        "dimension" : 1
    }],
# Coefficient values computed by 'ComputeGroundstate.py'
    "coefficients" : [[ ((0,), 8.62232166e-01+0.j),
                        ((1,), 3.90751463e-01+0.j),
                        ((2,), 1.76319079e-01+0.j),
                        ((3,), 1.76341727e-01+0.j),
                        ((4,), 1.33701599e-01+0.j),
                        ((5,), 8.55600354e-02+0.j),
                        ((6,), 7.32262775e-02+0.j),
                        ((7,), 6.18928306e-02+0.j),
                        ((8,), 4.60039741e-02+0.j),
                        ((9,), 3.79852891e-02+0.j),
                        ((10,), 3.30238536e-02+0.j),
                        ((11,), 2.66715736e-02+0.j),
                        ((12,), 2.20793952e-02+0.j),
                        ((13,), 1.92855507e-02+0.j),
                        ((14,), 1.63405622e-02+0.j),
                        ((15,), 1.37501408e-02+0.j),
                        ((16,), 1.20088028e-02+0.j),
                        ((17,), 1.04504702e-02+0.j),
                        ((18,), 8.96705679e-03+0.j),
                        ((19,), 7.84394523e-03+0.j),
                        ((20,), 6.92253373e-03+0.j),
                        ((21,), 6.04558118e-03+0.j),
                        ((22,), 5.31323609e-03+0.j),
                        ((23,), 4.72323417e-03+0.j),
                        ((24,), 4.18187189e-03+0.j),
                        ((25,), 3.70091723e-03+0.j),
                        ((26,), 3.30440448e-03+0.j),
                        ((27,), 2.95383322e-03+0.j),
                        ((28,), 2.63428650e-03+0.j),
                        ((29,), 2.36077352e-03+0.j),
                        ((30,), 2.12348951e-03+0.j),
                        ((31,), 1.90717384e-03+0.j),
                        ((32,), 1.71571941e-03+0.j),
                        ((33,), 1.54941637e-03+0.j),
                        ((34,), 1.39933010e-03+0.j),
                        ((35,), 1.26371702e-03+0.j),
                        ((36,), 1.14427051e-03+0.j),
                        ((37,), 1.03727953e-03+0.j),
                        ((38,), 9.39827503e-04+0.j),
                        ((39,), 8.52553465e-04+0.j),
                        ((40,), 7.74312534e-04+0.j),
                        ((41,), 7.02917303e-04+0.j),
                        ((42,), 6.38197161e-04+0.j),
                        ((43,), 5.79750603e-04+0.j),
                        ((44,), 5.26188004e-04+0.j),
                        ((45,), 4.77292709e-04+0.j),
                        ((46,), 4.32878757e-04+0.j),
                        ((47,), 3.91706181e-04+0.j),
                        ((48,), 3.53718791e-04+0.j),
                        ((49,), 3.19341641e-04+0.j),
                        ((50,), 2.87121616e-04+0.j),
                        ((51,), 2.56486939e-04+0.j),
                        ((52,), 2.28964224e-04+0.j),
                        ((53,), 2.03568929e-04+0.j),
                        ((54,), 1.78072445e-04+0.j),
                        ((55,), 1.54511016e-04+0.j),
                        ((56,), 1.34245598e-04+0.j),
                        ((57,), 1.13224015e-04+0.j),
                        ((58,), 9.11527446e-05+0.j),
                        ((59,), 7.33752837e-05+0.j),
                        ((60,), 5.77644925e-05+0.j),
                        ((61,), 3.71435338e-05+0.j),
                        ((62,), 1.54782538e-05+0.j) ]],
    "quadrature" : {
        "type" : "HomogeneousQuadrature",
	'qr': {
            'type': 'TensorProductQR',
            'dimension': 1,
            'qr_rules': [{'dimension': 1, 'order': 68, 'type': 'GaussHermiteQR'}]
        }
    }
}

# Which wavepackets are initial values
initvals = [ wp0 ]

leading_component = 0

# How often do we write data to disk
write_nth = 5

matrix_exponential = "pade"
